generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  email        String
  name         String?
  username     String  @unique
  password     String
  profileImage String?

  createAt     DateTime       @default(now())
  updateAt     DateTime       @updatedAt
  
  RefreshToken RefreshToken[]

  tweet     Tweet[]
  mediaFile MediaFile[]
}

model RefreshToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId   String   @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
}

model Tweet {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  text String
  mediaFile MediaFile[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  // Author
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  replyTo   Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replyToId String? @db.ObjectId
  replies   Tweet[] @relation("replies")

}
model MediaFile {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  url String
  providerPublicId String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  tweet Tweet? @relation(fields: [tweetId], references: [id])
  tweetId String? @db.ObjectId
}
